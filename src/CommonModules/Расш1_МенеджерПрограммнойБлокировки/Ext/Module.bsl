#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет блокировку переданных объектов
//
// Параметры:
//  ОбъектыБлокировки	 - Массив - массив ссылок на объекты 
// 
// Возвращаемое значение:
//   - 
//
Функция Заблокировать(ОбъектыБлокировки, ВремяОжидания) Экспорт
	
	ЗаблокированыДругимПользователем = Новый Массив;
	МассивКлючейАктивныхФоновыхЗаданий = МассивКлючейАктивныхФоновыхЗаданий(ИмяМетодаФоновогоЗадания());	
	
	Для каждого ЭлементБлокировки Из ОбъектыБлокировки Цикл
		
		Если ЭтоСсылка(ТипЗнч(ЭлементБлокировки)) Тогда
			КлючЗадания = ПолучитьНавигационнуюСсылку(ЭлементБлокировки);
		Иначе
			КлючЗадания = ЗначениеВСтрокуВнутр(ЭлементБлокировки);
		КонецЕсли;		
		
		Если МассивКлючейАктивныхФоновыхЗаданий.Найти(КлючЗадания) = Неопределено Тогда
			ЗапуститьФоновоеЗадание(КлючЗадания, ВремяОжидания);
		Иначе
			ЗаблокированыДругимПользователем.Добавить(ЭлементБлокировки);
		КонецЕсли; 
		
	КонецЦикла; 	
	
	Возврат Новый ФиксированныйМассив(ЗаблокированыДругимПользователем);
	
КонецФункции //Заблокировать

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗапуститьФоновоеЗадание(КлючЗадания,ВремяОжидания)
	
	Параметры = Новый Массив;
	Параметры.Добавить(ВремяОжидания);	
	ФоновыеЗадания.Выполнить(ИмяМетодаФоновогоЗадания(),Параметры,КлючЗадания,НаименованиеЗадания(КлючЗадания,ВремяОжидания));
		
КонецПроцедуры

Функция МассивКлючейАктивныхФоновыхЗаданий(ИмяМетодаФоновогоЗадания) Экспорт

	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("Состояние", СостояниеФоновогоЗадания.Активно);
	СтруктураОтбора.Вставить("ИмяМетода", ИмяМетодаФоновогоЗадания);
	
	МассивКлючей = Новый Массив;
	МассивФоновыхЗаданий = ФоновыеЗадания.ПолучитьФоновыеЗадания(СтруктураОтбора);
	Для каждого ФоновоеЗадание Из МассивФоновыхЗаданий Цикл
		МассивКлючей.Добавить(ФоновоеЗадание.Ключ);
	КонецЦикла; 
	
	Возврат МассивКлючей;

КонецФункции

Процедура Пауза(Секунд) Экспорт
	
	Если Не ИнформационнаяБазаФайловая() Тогда
		
		ТекущийСеансИнформационнойБазы = ПолучитьТекущийСеансИнформационнойБазы();
		ФоновоеЗадание = ТекущийСеансИнформационнойБазы.ПолучитьФоновоеЗадание();
		
		Если ФоновоеЗадание = Неопределено Тогда
			Параметры = Новый Массив;
			Параметры.Добавить(Секунд);
			ФоновоеЗадание = ФоновыеЗадания.Выполнить(ИмяМетодаФоновогоЗадания(), Параметры);
		КонецЕсли;
		
		Попытка
			ФоновоеЗадание.ОжидатьЗавершенияВыполнения(Секунд);
		Исключение
			Возврат;
		КонецПопытки;
		
	Иначе
		
		КомандаWindows = "Timeout /T " + Строка(Секунд) + " /NoBreak";
		ЗапуститьПриложение(КомандаWindows,,Истина);
		
	КонецЕсли; 	
    
КонецПроцедуры

#КонецОбласти

#Область ОбщегоНазначения

// Проверка того, что переданный тип является ссылочным типом данных.
// Для типа "Неопределено" возвращается Ложь.
//
// Возвращаемое значение:
//  Булево.
//
Функция ЭтоСсылка(Тип) 
	
	Возврат Тип <> Тип("Неопределено") 
		И (Справочники.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ Документы.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ Перечисления.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыВидовХарактеристик.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыСчетов.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыВидовРасчета.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ БизнесПроцессы.ТипВсеСсылкиТочекМаршрутаБизнесПроцессов().СодержитТип(Тип)
		ИЛИ Задачи.ТипВсеСсылки().СодержитТип(Тип)
		ИЛИ ПланыОбмена.ТипВсеСсылки().СодержитТип(Тип));
	
КонецФункции

// Определяет режим эксплуатации информационной базы файловый (Истина) или серверный (Ложь).
// При проверке используется СтрокаСоединенияИнформационнойБазы, которую можно указать явно.
//
// Параметры:
//  СтрокаСоединенияИнформационнойБазы - Строка - параметр используется, если
//                 нужно проверить строку соединения не текущей информационной базы.
//
// Возвращаемое значение:
//  Булево.
//
Функция ИнформационнаяБазаФайловая(Знач СтрокаСоединенияИнформационнойБазы = "") 
			
	Если ПустаяСтрока(СтрокаСоединенияИнформационнойБазы) Тогда
		СтрокаСоединенияИнформационнойБазы =  СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;
	Возврат СтрНайти(ВРег(СтрокаСоединенияИнформационнойБазы), "FILE=") = 1;
	
КонецФункции 


#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НаименованиеЗадания(КлючЗадания,ВремяОжидания)
	Возврат СтрШаблон("Заблокирован %1 на %2 сек.", КлючЗадания, ВремяОжидания );
КонецФункции //НаименованиеЗадания

Функция ИмяМетодаФоновогоЗадания()
	Возврат "Расш1_МенеджерПрограммнойБлокировки.Пауза";
КонецФункции //ИмяМетода

#КонецОбласти
	
#КонецЕсли